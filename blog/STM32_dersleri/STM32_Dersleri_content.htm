<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="STM32_Dersleri_content_dosyalar/filelist.xml">
<link rel=Edit-Time-Data href="STM32_Dersleri_content_dosyalar/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Mert Can Bilgiç</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Mert Can Bilgiç</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>6</o:TotalTime>
  <o:Created>2024-11-03T14:49:00Z</o:Created>
  <o:LastSaved>2024-11-03T14:49:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>3733</o:Words>
  <o:Characters>21279</o:Characters>
  <o:Lines>177</o:Lines>
  <o:Paragraphs>49</o:Paragraphs>
  <o:CharactersWithSpaces>24963</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=dataStoreItem href="STM32_Dersleri_content_dosyalar/item0001.xml"
target="STM32_Dersleri_content_dosyalar/props002.xml">
<link rel=themeData href="STM32_Dersleri_content_dosyalar/themedata.thmx">
<link rel=colorSchemeMapping
href="STM32_Dersleri_content_dosyalar/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:HyphenationZone>21</w:HyphenationZone>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>TR</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="376">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hashtag"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Unresolved Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:162;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536869121 1107305727 33554432 0 415 0;}
@font-face
	{font-family:"Aptos Display";
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 3 0 0 415 0;}
@font-face
	{font-family:Aptos;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 3 0 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 1 Char";
	mso-style-next:Normal;
	margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;}
h2
	{mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 2 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;}
h3
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 3 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;}
h4
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 4 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0cm;
	margin-bottom:2.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;
	font-style:italic;}
h5
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 5 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0cm;
	margin-bottom:2.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;}
h6
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 6 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-weight:normal;
	font-style:italic;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 7 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:7;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 8 Char";
	mso-style-next:Normal;
	margin:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:8;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Başlık 9 Char";
	mso-style-next:Normal;
	margin:0cm;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:9;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Konu Başlığı Char";
	mso-style-next:Normal;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:0cm;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Konu Başlığı Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0cm;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Konu Başlığı Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0cm;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Konu Başlığı Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:0cm;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Altyazı Char";
	mso-style-next:Normal;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Alıntı Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Güçlü Alıntı Char";
	mso-style-next:Normal;
	margin-top:18.0pt;
	margin-right:43.2pt;
	margin-bottom:18.0pt;
	margin-left:43.2pt;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:solid #0F4761 .5pt;
	mso-border-top-themecolor:accent1;
	mso-border-top-themeshade:191;
	mso-border-bottom-alt:solid #0F4761 .5pt;
	mso-border-bottom-themecolor:accent1;
	mso-border-bottom-themeshade:191;
	padding:0cm;
	mso-padding-alt:10.0pt 0cm 10.0pt 0cm;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;
	font-style:italic;}
span.MsoIntenseEmphasis
	{mso-style-priority:21;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.MsoIntenseReference
	{mso-style-priority:32;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	font-variant:small-caps;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	letter-spacing:.25pt;
	font-weight:bold;}
span.Balk1Char
	{mso-style-name:"Başlık 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 1";
	mso-ansi-font-size:20.0pt;
	mso-bidi-font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Balk2Char
	{mso-style-name:"Başlık 2 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 2";
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Balk3Char
	{mso-style-name:"Başlık 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 3";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Balk4Char
	{mso-style-name:"Başlık 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 4";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.Balk5Char
	{mso-style-name:"Başlık 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 5";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Balk6Char
	{mso-style-name:"Başlık 6 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 6";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	font-style:italic;}
span.Balk7Char
	{mso-style-name:"Başlık 7 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 7";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;}
span.Balk8Char
	{mso-style-name:"Başlık 8 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 8";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	font-style:italic;}
span.Balk9Char
	{mso-style-name:"Başlık 9 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Başlık 9";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;}
span.KonuBalChar
	{mso-style-name:"Konu Başlığı Char";
	mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Konu Başlığı";
	mso-ansi-font-size:28.0pt;
	mso-bidi-font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
span.AltyazChar
	{mso-style-name:"Altyazı Char";
	mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Altyazı;
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;}
span.AlntChar
	{mso-style-name:"Alıntı Char";
	mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Alıntı;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	font-style:italic;}
span.GlAlntChar
	{mso-style-name:"Güçlü Alıntı Char";
	mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Güçlü Alıntı";
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:12.0pt;
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-fareast-language:EN-US;}
.MsoPapDefault
	{mso-style-type:export-only;
	margin-bottom:8.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:296028337;
	mso-list-type:hybrid;
	mso-list-template-ids:936566468 69140481 69140483 69140485 69140481 69140483 69140485 69140481 69140483 69140485;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Courier New";}
@list l0:level3
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Wingdings;}
@list l0:level4
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l0:level5
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Courier New";}
@list l0:level6
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Wingdings;}
@list l0:level7
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l0:level8
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Courier New";}
@list l0:level9
	{mso-level-number-format:bullet;
	mso-level-text:;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Wingdings;}
@list l1
	{mso-list-id:322927096;
	mso-list-type:hybrid;
	mso-list-template-ids:626684846 69140497 69140505 69140507 69140495 69140505 69140507 69140495 69140505 69140507;}
@list l1:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level3
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
@list l1:level4
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level5
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level6
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
@list l1:level7
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level8
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level9
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Normal Tablo";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:8.0pt;
	mso-para-margin-left:0cm;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=TR style='tab-interval:35.4pt;word-wrap:break-word'>

<div class=WordSection1>

<h1 align=center style='text-align:center'><span style='font-size:28.0pt;
line-height:115%'>STM32 DERSLERİ<o:p></o:p></span></h1>

<h2 style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1'><![if !supportLists]><span
style='font-size:22.0pt;line-height:115%;mso-fareast-font-family:"Aptos Display";
mso-fareast-theme-font:major-latin;mso-bidi-font-family:"Aptos Display";
mso-bidi-theme-font:major-latin'><span style='mso-list:Ignore'>1)</span></span><![endif]><span
style='font-size:22.0pt;line-height:115%'>Başlangıç<o:p></o:p></span></h2>

<p class=MsoNormal>STM32 programlama da HAL kütüphaneleri sayesinde kolayca
programlama yapılabilmektedir. Register seviyesinden ziyade HAL kütüphaneleri
Arduino tarzı fonksiyon çağırma gibi metotlarla kolayca ve bellekte çok yer
kaplamadan yapılabilmektedir. </p>

<p class=MsoNormal>STM32 programlama için ben STM32F070RB mikroişlemcisini
barındıran NUCLEO kartını kullanacağım. Programlama da kullanılacak IDE ise ST
firmasının kendi ürünü olan STM32CubeIDE kullanacağım.</p>

<p class=MsoNormal>Programı ilk çalıştırdığımızda bizden bir çalışma alanı
olarak “workspace” belirtmemizi isteyecektir. Program bu klasörün içerisine her
bir proje için ayrı klasör oluşturup kendi özel dosyalarını eklemektedir. Bunun
için çalışacağımız klasörü seçmemiz gerekir.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1076" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim"
 style='width:336.75pt;height:149.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image001.png" o:title="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim"
  croptop="2445f" cropright="1000f"/>
</v:shape><![endif]--><![if !vml]><img width=449 height=199
src="STM32_Dersleri_content_dosyalar/image002.png"
alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim" v:shapes="_x0000_i1076"><![endif]></span></p>

<p class=MsoNormal>Daha sonra boş bir ekran üzerinde, solda projelerimiz olduğu
ekran açılır. Buradan File&gt;New &gt;STM32 Project seçilerek sıfırdan bir
proje açılır.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1075" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, multimedya yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453.75pt;height:159.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image003.png" o:title="metin, ekran görüntüsü, yazılım, multimedya yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=213
src="STM32_Dersleri_content_dosyalar/image004.png"
alt="metin, ekran görüntüsü, yazılım, multimedya yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1075"><![endif]></span></p>

<p class=MsoNormal>Açılan ekranda “Board Selector” sekmesi altında “NUCLEO-F070RB”
aratılarak geliştirme kartımız bulunur.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1074" type="#_x0000_t75" style='width:411pt;height:177.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image005.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=548 height=237
src="STM32_Dersleri_content_dosyalar/image006.png" v:shapes="_x0000_i1074"><![endif]></span></p>

<p class=MsoNormal>Next diyerek proje isimlendirilmesi yapılarak yeni projemiz
açılır. Karşımıza. ioc uzantılı bir dosya açılır. Bu dosyada geliştirme
kartımızda mikroişlemcimize bağlanmış olan bağlantılar gözükür. Ekstra olarak
bağlamak istediğimiz giriş, çıkış veya başka birimlerin konfigürasyonu yapılarak
projemize entegre edebilir ve otomatik kod oluşturmasını sağlayabiliriz. </p>

<p class=MsoNormal>Clock ayarları;</p>

<p class=MsoNormal>Yine. ioc uzantılı dosyada Clock Configuration sekmesi
altında mikroişlemcinin çalışacağı clock ayarlarını yapabiliriz. Şimdilik
bunlara dokunmayacağız. Ama ileride Timer gibi bazı özel işlerde
kullanabileceğiz</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2 style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1'><![if !supportLists]><span
style='font-size:22.0pt;line-height:115%;mso-fareast-font-family:"Aptos Display";
mso-fareast-theme-font:major-latin;mso-bidi-font-family:"Aptos Display";
mso-bidi-theme-font:major-latin'><span style='mso-list:Ignore'>2)</span></span><![endif]><span
style='font-size:22.0pt;line-height:115%'>GPIO Kullanımı<o:p></o:p></span></h2>

<p class=MsoNormal>İlk dersimizde her mikroişlemcide yaptığımız led yakma
söndürme olan blink uygulamamızı yapacağız. Bunun için kartın üstünde buluna
LD2 olarak tanımlanmış ledimizle yapabiliriz. Bu ledin hangi portun hangi
pinine bağlı olduğunu anlamak için .ioc uzantılı dosyadan veya kartın ilgili dökümanlarına
ST’nin kendi sitesinden bakabiliriz. Benim kullandığım kartta LD2 A portunun 5.
Pinine bağlı bulunmakta.</p>

<p class=MsoNormal>İlk dersimiz için Lesson 0001 – GPIO_Blink adlı dosya
açalım. Bu dosyayı açtıktan sonra .ioc üzerinde bir şey yapmamız gerekmeyecek.
Projeyi açtıktan sonra proje ağacımızın altında birçok dosya bulunmakta.
Bunlara hiç dokunmadan Core dosyası altında Src ve Inc dosyaları bizleri
ilgilendirmektedir. Inc altında C programlama ile yazılmış kütüphanelerin .h
uzantılı header dosyaları, Src altında ise .c uzantılı dosyaları bulunmakta.
Bizler kodlarımızı Src altında bulunan main.c’nin içine yazacağız. Bunların dışındaki
dosyalar ST firmasının o işlemci özelinde oluşturduğu ve başlangıçta
çalıştırılan veya HAL kütüphanesinin çalışması için gereken dosyalardır.
Zamanla bu dosyalara da değineceğiz.<span style='mso-spacerun:yes'>  </span><br>
Şimdi main.c’nin altında yine HAL kütüphanesini ilgilendiren veya işlemcinin
çalışması için gereken bir çok kod göreceğiz. Bunları yine dokunmadan “USER
CODE BEGIN” ile başlayan ve “USER CODE END” olarak biten yorum satırları
arasına kodlarımızı uygun yere yazacağız. Bunların dışında bir yere yazılması
halinde kodlarımız silinecek ve çalışmayacaktır.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal>***Doğrudan led yakıp söndürmek için bu kısımları
atlayabilirsiniz. Bu kısımda GPIO birimi için gerekli ayarlar nedir, neler
yapmak gerekir onlar anlatılacaktır.***</p>

<p class=MsoNormal>HAL kütüphanesinin hangi kodlarla hangi kodları
çalıştırabileceğimize derinden öğrenmek için ST firmasının her seri için
oluşturduğu “Description of STM32… HAL and low-layer drivers” dökümanına kendi
sitesinden ulaşabilirsiniz. Bu dökümanda GPIO, TIMER, ADC, PWM gibi gibi her
fonksiyon için kullanılan belirli fonksiyonları ve bunların açıklamalarını
bulabilirsiniz. Benim kullandığım nucleo kartına uygun dökümanda GPIO için
Generic Driver ve Extension Driver olarak iki bölümde açıklanmıştır. Şimdilik
Generic driver için oluşturulmuş fonksiyonları inceleyeceğiz.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal>STM32 mikroişlemcilerinde diğer işlemciler de olduğu gibi
bir pin üzerinde birden fazla birimler, yani GPIO, TIMER, ADC vb. gibi birimler
barındırabilir. Hangi pinlerde hangi birimlerin hangi bacağı bulunduğunu
datasheet ve referance manuel dökümanlarından ulaşabilirsiniz. Bir işlem veya
uygulama için hangi birimi ve hangi pinleri kullanacağınızı belirledikten sonra
bazı ayarlar yapmanız gerekmektedir. Bizim ilk uygulamamız olan led yakıp
söndürme için GPIO biriminin gereken özelliklerini incelememiz gerekir. GPIO
için yapılması gereken birkaç ayar vardır. Bunlar;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1073" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453.75pt;height:128.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image007.png" o:title="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=171
src="STM32_Dersleri_content_dosyalar/image008.png"
alt="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1073"><![endif]></span></p>

<p class=MsoNormal>Bu ayarları uygulamanız için ne gerekiyorsa ona uygun
ayarlayıp çıkış almamız gerekmektedir. Bütün bunları HAL kütüphanesi ile
yapabileceğimiz gibi doğrudan register seviyesinde, ilgili registerların
bitlerini değiştirerek yapabiliriz. GPIO biriminin bütün registerlarına ve ne
işe yaradıklarına reference manuel dökümantasyonundan erişebilirsiniz. Bunun
yerine HAL kütüphanesi bizlere kolaylık sağlamaktadır.</p>

<p class=MsoNormal><b>Uygulama 1.1)</b> Led yak söndür;</p>

<p class=MsoNormal>İlk uygulamamızda led yakıp söndürmek için bu ayarları HAL
kütüphanesinin her bir ayar için kullandığı struct yapısından ilgili moda göre
karşılığını yazacağız.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1072" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:342.75pt;height:102.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image009.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=457 height=137
src="STM32_Dersleri_content_dosyalar/image010.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1072"><![endif]></span></p>

<p class=MsoNormal>Ledi yakıp 1 sn. aralıklarla söndürmek için ise;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1071" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:341.25pt;height:120pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image011.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=455 height=160
src="STM32_Dersleri_content_dosyalar/image012.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1071"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 1.2)</b> Buton ile led kontrolü;</p>

<p class=MsoNormal>Yine GPIO ayarları yapılarak kart üzerindeki butonu giriş
olarak ayarlayıp bununla ledimizi kontrol edeceğiz. Butonumuz işlemcimizin C portunun
13. Pinine bağlı.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1070" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:333pt;height:116.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image013.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=444 height=155
src="STM32_Dersleri_content_dosyalar/image014.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1070"><![endif]></span><br>
Butona basıldığında lek yakması için if-else yapısı;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1069" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:333pt;height:163.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image015.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=444 height=218
src="STM32_Dersleri_content_dosyalar/image016.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1069"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 1.3)</b> Interrupt (kesme) kullanarak buton
kontrolü;</p>

<p class=MsoNormal>Interruptlar yani kesmeler, program akışında bir olayın
gerçekleşmesi anında programın akışını durdurup istenen bloğu çalıştırmak için
kullanılır. Gömülü yazılım uygulamaları genellikle bir main fonksiyonunun
içerisinde sonsuz bir döngüde gerçekleştirilir. Bu sonsuz döngü içerisinde
beklenen olaylar bir if-else gibi yapılarla kontrol edilir ve şartlar
gerçekleştiğinde istenen durumlar yapılır. Bu sonsuz döngüde işlemler yukarıdan
aşağı bir şekilde tamamlanır. Eğer programınız çok fazla işlem içeriyor ve
işlemler uzun sürüyorsa bir şartın kontrolünü yapmakta geç kalabilir ve anlık
olayları kaçırabilir. Kesmeler bu sonsuz döngüden bağımsız bir şekilde,
beklenen şart gerçekleştiğinde sonsuz döngüyü durdurur ve kesme için belirtilen
fonksiyona dallanıp işlemleri yapar. Sonrasında döngüde kaldığı yerden devam
eder.</p>

<p class=MsoNormal>Mikroişlemcilerde kesmeler iç kesme (internal) ve dış kesme
(external) olarak ikiye ayrılır. İç kesmeler mikroişlemcinin içerisinde bulunan
bir birimde gerçekleşen olay için gerçekleşir. Örnek olarak timer biriminde
istenen zamana ulaşınca oluşan kesme veya uart ile seri haberleşmede istenen
bir bilgi geldiğinde bunlar iç kesmedir. Dış kesme ise dışarıdan yani buton,
sensör vb. gibi bir olayın gerçekleştiği zaman oluşan kesmelerdir. Bu
uygulamada dış kesmeyi kullanacağız.</p>

<p class=MsoNormal>STM32f070’de dış kesmelerle ilgili ayarların yapılacağı
birim EXTI birimidir. Burada Dış kesmenin kaynağı belirtilmelidir. EXTI
birimden 0’dan başlayıp 32’ye kadar kanal bulunmaktadır. Dışarıdan bağlı olan
kanallar 15’e kadar olup sonrasında başka birimler bağlıdır. Her bir portun bir
pini bir EXTI kanalına bağlıdır. Yani A, B, C, D, E ve F portlarının 0. Bitleri
EXTI0’a, 1. Bitleri EXTI1’e şeklinde bağlıdır. Her bir kanala birden fazla
portun pinleri bağlı olduğundan dolayı burada bir seçim yapılması zorunludur.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1068" type="#_x0000_t75" style='width:371.25pt;height:267.75pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image017.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=495 height=357
src="STM32_Dersleri_content_dosyalar/image018.png" v:shapes="_x0000_i1068"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>GPIO ayarlarını ve kesme ayarlarını yapıyoruz; </p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1067" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453.75pt;height:152.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image019.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=203
src="STM32_Dersleri_content_dosyalar/image020.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1067"><![endif]></span></p>

<p class=MsoNormal>Kesme olmadan yani butona basılmaz iken çalışacak kod;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1066" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:353.25pt;height:124.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image021.png" o:title="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=471 height=166
src="STM32_Dersleri_content_dosyalar/image021.png"
alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1066"><![endif]></span></p>

<p class=MsoNormal>Kesme fonksiyonu;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1065" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:327pt;height:82.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image022.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=436 height=110
src="STM32_Dersleri_content_dosyalar/image022.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1065"><![endif]></span></p>

<p class=MsoNormal>Burada for döngüsünün açılmasının sebebi, kesme içerisinde
delay kullanamayız. Delay kullanmaz isek kesme fonksiyonuna girebildiğinden
emin olamayız. Bunun için biraz süre alacak bir for döngüsü oluşturuyoruz.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2><span style='font-size:22.0pt;line-height:115%'>Modüler Yapılar Oluşturmak<o:p></o:p></span></h2>

<p class=MsoNormal>Şimdiye kadar yazılan kodlarda bütün programı main.c’nin
içine yazdık. Bu tür basit programlarda bu sıkıntı değil. Lakin uzun
programlarda bütün işlerin derli toplu olması, bir değişiklik yapmak için çok
uzun kodların arasından değişecek kodu bulup değiştirmenin zor olması gibi
durumlarda modüler yapılar kolaylık sağlar. Modüler yapı kullanmak için
kullandığımız her birim için farklı kendi kütüphanemiz tarzı dosyalar oluşturup
bunu main içerisinde çağırmamız gerekir. Basit bir blink kodu için;</p>

<p class=MsoNormal><b>Uygulama 2.1)</b> Modüler yapıda Blink uygulaması;</p>

<p class=MsoNormal>Blink uygulamasında led yakıp söndürme işlemini yapıyorduk.
Kullanacağımız led yine kartın üzerinde bulunan A5’e bağlı LD2 ledi. Modüler
yapı için bütün dosyalarımızın olacağı bir klasör açmamız gerekecek. Bunu &gt;Drivers
klasörünün içine açıyoruz. Ardından bu klasörün içine aynı isimli .h uzantılı
ve .c uzantılı dosya açıyoruz. </p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1064" type="#_x0000_t75" alt="yazı tipi, ekran görüntüsü, metin, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:89.25pt;height:41.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image023.png" o:title="yazı tipi, ekran görüntüsü, metin, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=119 height=55
src="STM32_Dersleri_content_dosyalar/image023.png"
alt="yazı tipi, ekran görüntüsü, metin, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1064"><![endif]><span style='mso-spacerun:yes'> </span><!--[if gte vml 1]><v:shape
 id="_x0000_i1063" type="#_x0000_t75" style='width:207pt;height:21pt;
 visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image024.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=276 height=28
src="STM32_Dersleri_content_dosyalar/image024.png" v:shapes="_x0000_i1063"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-no-proof:yes'>.h uzantılı dosyanın kodu;<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1062" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:207.75pt;height:126pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image025.png" o:title="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=277 height=168
src="STM32_Dersleri_content_dosyalar/image025.png"
alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1062"><![endif]></span></p>

<p class=MsoNormal>.c uzantılı dosyadaki kod;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1061" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:300pt;height:177.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image026.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=400 height=237
src="STM32_Dersleri_content_dosyalar/image027.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1061"><![endif]></span></p>

<p class=MsoNormal>Sonrasında main.c’nin içine en yukarıya <b>#include</b>
&quot;myDrivers_Led.h&quot; ile kütüphanemizi ekliyoruz. Daha sonra ledin
yanması için gerekli ayarların yapılması için userLed_init() fonksiyonunu
çağırıyoruz.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1060" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:132.75pt;height:44.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image028.png" o:title="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=177 height=59
src="STM32_Dersleri_content_dosyalar/image028.png"
alt="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1060"><![endif]></span></p>

<p class=MsoNormal>Şimdi ledin yanıp sönmesi için while içerisinde ledi yakıp
bekletip söndürmemiz gerekiyor;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1059" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:163.5pt;height:129.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image029.png" o:title="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=218 height=173
src="STM32_Dersleri_content_dosyalar/image029.png"
alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1059"><![endif]></span></p>

<p class=MsoNormal>İşlem bu kadar. Burda bir sıkıntı olması durumunda projenin
üstüne sağ tıklayıp properties sekmesinde C/C++ Build&gt;Setting altında
Include Paths sekmesinden myDrivers_Led klasörünü seçin. </p>

<p class=MsoNormal>İlerleyen bölümlerde bu modüler yapıyı kullanmayacağız. Ama
bilinmesi önemlidir.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2 style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1'><![if !supportLists]><span
style='font-size:22.0pt;line-height:115%;mso-fareast-font-family:"Aptos Display";
mso-fareast-theme-font:major-latin;mso-bidi-font-family:"Aptos Display";
mso-bidi-theme-font:major-latin'><span style='mso-list:Ignore'>3)</span></span><![endif]><span
style='font-size:22.0pt;line-height:115%'>Timers (Zamanlayıcılar)<o:p></o:p></span></h2>

<p class=MsoNormal>Timer birimi yani zamanlayıcılar mikroişlemcinin çalıştığı
frekansa bağlı olarak zaman sayımı ya da doğrudan sayım yapabilirler.
Mikroişlemcinin her clock darbelerinin yükselen ya da düşen kenarı ile birlikte
sayım yaparlar. Bu sayım bir register üzerinde kaydedilir ve istenildiğinde
kullanılır. En basit kullanımı, program içerinde kullandığımız delay
fonksiyonlarıdır. Bir başka uygulama da zaman ölçümüdür. Timer birimini aktif
ettiğimizde iki farklı olayın gerçekleşmesi arasındaki zamanı ölçebiliriz.</p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Zaman sayması
yapabilmek için timer birimine uygulanan frekansı bilmemiz gerek. Çünkü clock
sinyalimiz bir kare dalgadır. Ve her bir kare dalgada bir sayı arttırırız.
Örnek olarak 1 Hz’lik bir frekansta her 1 saniyede 1 adım sayarız. 1kHz’lik bir
frekansta her 1 ms’de bir adım ya da 1 saniyede 1000 adım sayarız. </p>

<p class=MsoNormal>Yani; Adım = 1/f ‘dir.</p>

<p class=MsoNormal>Bazı timer terimleri;</p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Taşma (Overflow):
Sayıcı registerlarının dolma durumudur. Örnek olarak 8 bitlik bir sayıcıda
0b11111111 yani 255 değerinden sonra taşma oluşacaktır. Taşma durumunda sonra
register 0’a dönecektir.</p>

<p class=MsoNormal>Taşma Kesmesi: Her bir taşma olduğunda kesme üretebilir ve
sayım işlemi istenildiği sayıya ulaştığında bir işlem yaptırabiliriz.</p>

<p class=MsoNormal>Yakalama Modu (Capture Mode): Mikroişlemciye dışarıdan bir
sinyal geldiği anda timer’ın içinde bulunan değeri kopyalayıp başka bir değere
atayabiliriz.</p>

<p class=MsoNormal>Karşılaştırma Modu (Compare Mode): Karşılaştırmak için
kullandığımız bir değeri bir değere atayarak timerın o değere ulaştığında bir
olay oluşturabiliriz. Genellikle delay fonksiyonlarında kullanılır.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal>PWM (Pulse Width Modulation): Çıkışın 1-0 olma arasındaki
süreleri değiştirerek çıkışın ortalama gerilimini ayarlamak için kullanılır.
Doluluk oranı (duty cycle) ve periyodun değiştirilerek çıkışı değiştirebiliriz.
</p>

<p class=MsoNormal>STM32’de Timer birimi;</p>

<p class=MsoNormal>Benim kullanıdğım F070 kartında 11 adet timer bulunmakta. Bunlar;<span
style='mso-no-proof:yes'> <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1058" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:256.5pt;height:124.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image030.png" o:title="metin, ekran görüntüsü, yazı tipi, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=342 height=166
src="STM32_Dersleri_content_dosyalar/image030.png"
alt="metin, ekran görüntüsü, yazı tipi, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1058"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-no-proof:yes'>Biz burada bait amaçlı olan
TIM6 ve TIM7’yi kullanacağız. TIM6 16 bit değerinde bir registera sahiptir.
Aynı zamanda auto-reload registerına sahiptir. Yani bizim ulaşmasını
istediğimiz değeri bu registera yükleyerek 16 bitin hepsinin dolmasını
beklemeden istediğimiz olayı gerçekleştirebiliriz. Timer biriminin genel yapısı
şu şekildedir;<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1057" type="#_x0000_t75" alt="metin, ekran görüntüsü, diyagram, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:388.5pt;height:313.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image031.png" o:title="metin, ekran görüntüsü, diyagram, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=518 height=418
src="STM32_Dersleri_content_dosyalar/image032.png"
alt="metin, ekran görüntüsü, diyagram, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1057"><![endif]></span></p>

<p class=MsoNormal>Timerın çalışması için clock frekansına ihtiyaç duyduğumuzu
söylemiştik. Ama mikroişlemcinin kullandığı clock frekansı ile timerın
kullanacağı frekans aynı değerde olmayabilir. Daha alçak bir frekans kullanmak
istersek prescaler ile bu değeri bölebiliriz.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 3.1)</b> Timer ile Interrupt oluşturup led yakıp
söndürme;</p>

<p class=MsoNormal>Bu uygulamada gerekli konfigürasyonları .ioc üzerinden yapıp
otomatik oluşturacağız. 070rb için TIM6 kullanacağız. Timers sekmesi altında
aktif edip gerekli değerleri girmemiz gerekiyor. NVIC üzerinden de kesmeleri
aktif etmemiz gerekiyor.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1056" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:329.25pt;height:231pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image033.png" o:title="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=439 height=308
src="STM32_Dersleri_content_dosyalar/image034.png"
alt="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1056"><![endif]></span></p>

<p class=MsoNormal>Mikroişlemcimiz 48Mhz’de çalışmaktadır. Her 1 sn’de ledi
yakıp söndürmemiz için 1 hz’lik sinyale gerek var fakat 1Hz gibi bir değer
giremeyiz. Bunun için sinyali 10MHz’e düşürüp auto load registerina ise 10000
değerini girerek her 1 saniyede taşma olacak, kesme devreye girip ledimizi
yakacak ve söndürecektir. Buradaki sayıların 1 eksiğini giriyoruz çünkü
mikroişlemcilerde sayma 0’dan başlar. </p>

<p class=MsoNormal style='text-indent:35.4pt'>Timer Clk = APB Clk/Prescaler,<span
style='mso-tab-count:1'>         </span><span style='font-size:9.0pt;
line-height:115%'>Burada APB CLK, APB Peripheralına uygulanan clock değeri<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:9.0pt;
line-height:115%'><span style='mso-tab-count:5'>                                                                                                                      </span>Prescalar
ise timer biriminin kendi prescalarıdır.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:212.4pt;text-indent:-177.15pt'>Freq =
Timer Clk/ARR,<span style='mso-tab-count:1'>                             </span><span
style='font-size:8.0pt;line-height:115%'>Burada ARR auto-load registerımızdır.
Yani buraya kadar sayıp sonrasında 0’a dönecektir. Her taşmada bir interrupt
sinyali alacağız. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:212.4pt;text-indent:-177.15pt'><span
style='font-size:8.0pt;line-height:115%'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal>Bu uygulamada; Prescaler’ı 4800, ARR’yi de 10.000 seçiyoruz.
Yani;</p>

<p class=MsoNormal>Timer Clk = 48 MHz/4800 = 10.000 Hz=10 kHz,<span
style='mso-tab-count:1'>     </span><span style='font-size:8.0pt;line-height:
115%'>Yani her 0.1ms’de 1 adım sayacak, <o:p></o:p></span></p>

<p class=MsoNormal>10.000/10.000 = 1 = Freq olmuş oluyor.<span
style='mso-tab-count:1'>      </span><span style='mso-tab-count:1'>                </span><span
style='font-size:8.0pt;line-height:115%'>10.000 adım sayması için 1 sn gerekli</span></p>

<p class=MsoNormal>.ioc’den çıkarak otomatik kod oluşturuyoruz. Timer için
oluşturulan kodlar şu şekilde olmalıdır;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1055" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:294pt;height:222.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image035.png" o:title="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=392 height=297
src="STM32_Dersleri_content_dosyalar/image036.png"
alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1055"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Şimdi kesmeyi aktif etmemiz gerekiyor;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1054" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:176.25pt;height:43.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image037.png" o:title="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=235 height=58
src="STM32_Dersleri_content_dosyalar/image037.png"
alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1054"><![endif]></span></p>

<p class=MsoNormal>Şimdi ise kesme fonksiyonunun içine ledimizin durumunu
değiştiriyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1053" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:329.25pt;height:65.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image038.png" o:title="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=439 height=87
src="STM32_Dersleri_content_dosyalar/image038.png"
alt="metin, yazı tipi, ekran görüntüsü, çizgi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1053"><![endif]></span></p>

<p class=MsoNormal>İşlem bu kadar. Ledimiz 1sn aralıklarla yanıp sönecektir.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 3.2)</b> PWM çıkışı üretmek;</p>

<p class=MsoNormal>PWM’den daha önce bahsetmiştik. Çıkışın belirli zamanında 1
diğer zamanda 0 olması ve bu sürelerin ayarlarını değiştirerek çıkış gücünü
değiştirebiliriz. Duty Cycle yani doluluk oranı bir sinyalin bir periyodunda
aktif olduğu yani 1 olduğu sürenin bir periyoda oranıdır.<span
style='mso-spacerun:yes'>  </span>Yani basitçe 1 Hz’lik sinyalde sinyal
periyodu 1 saniyedir. %20 duty cyle oranı verilirse bu periyotta 0.2 s. yüksek
yani 1, 0.8 s. alçak yani 0 olmuş olur. </p>

<p class=MsoNormal>Yukarıda hesaplanan değerlerden devam edeceğiz. Yani
timerdan çıkış alacağımız frekans 1Hz olacaktır. PWM duty cyle oranımız ise CCR/ARR
olarak bulabiliriz. Yani ARR değeri 10.000 iken CCR 10.000 olursa duty cycle
%100 olarak bulunur.</p>

<p class=MsoNormal>Duty Cycle (%) = CCRx/ARR * 100; </p>

<p class=MsoNormal>CCR burada Capture-Compare registerımızdır.<span
style='mso-spacerun:yes'>  </span>Sayma işlemi 0’dan başlayarak ilerler. Burada
yazdığımız değere ulaşınca ARR’ye yazdığımız değere kadar çıkışı 0’lar. Sayma
işlemi son sayıma gelince 0’lanır ve çıkış tekrar aktif edilip aynı döngü
tekrarlanır. </p>

<p class=MsoNormal><br>
<span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="_x0000_i1052"
 type="#_x0000_t75" alt="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:309pt;height:168.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image039.png" o:title="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=412 height=225
src="STM32_Dersleri_content_dosyalar/image040.png"
alt="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1052"><![endif]></span></p>

<p class=MsoNormal>Burada led olarak kart üzerindeki LD2 ledini değil dışarıdan
harici led bağlayacağız. Çünkü LD2 ledi herhangi bir timer’a bağlı bir pin
değildir. TIM14 birimini kullanacağımız için PA4’ü ya da kart üzerindeki A2
pinini kullanacağız. Ledin + bacağını buraya – bacağını GND’ye bağlıyoruz.</p>

<p class=MsoNormal>Yeni proje açıldıktan sonra .ioc’den TIM14 aktif edilip
Channel 1’den PWM Generation CH1 seçilir. TIM14’e bağlı pin PA4’dür. Dosya
kaydedilip gerekli kod oluşturulur. Oluşturulan kod şu şekildedir;</p>

<p class=MsoNormal><br>
<span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="_x0000_i1051"
 type="#_x0000_t75" alt="metin, elektronik donanım, ekran görüntüsü, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:276pt;height:291.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image041.png" o:title="metin, elektronik donanım, ekran görüntüsü, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=368 height=389
src="STM32_Dersleri_content_dosyalar/image042.png"
alt="metin, elektronik donanım, ekran görüntüsü, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1051"><![endif]></span></p>

<p class=MsoNormal>Şimdi PWM’i başlatmamız gerekiyor;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1050" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:242.25pt;height:48.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image043.png" o:title="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=323 height=65
src="STM32_Dersleri_content_dosyalar/image043.png"
alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1050"><![endif]></span></p>

<p class=MsoNormal>PWM başladı fakat bunu görebilmel için duty cycle oranını
belirli aralıklarla arttırarak çıkışta görmemiz gerekecek;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1049" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:319.5pt;height:202.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image044.png" o:title="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=426 height=270
src="STM32_Dersleri_content_dosyalar/image044.png"
alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1049"><![endif]></span></p>

<p class=MsoNormal>Bütün işlem bu kadar. Ledimiz 500ms aralıklarla %20
parlaklıklarla artacaktır.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 3.3)</b> PWM ile Servo Motor Kontrolü;</p>

<p class=MsoNormal>Servo motorlar açılarını ayarlayarak istediğimiz konuma
getirebildiğimiz motorlardır. Servo motorlar PWM sinyalinin duty cycle
oranlarına göre açılandırılırlar. Kullanacağımız servo motor SG90 tipi bir
servo motordur ve datasheet bilgilerine göre;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1048" type="#_x0000_t75" alt="metin, ekran görüntüsü, diyagram, paralel içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:297pt;height:225pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image045.png" o:title="metin, ekran görüntüsü, diyagram, paralel içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=396 height=300
src="STM32_Dersleri_content_dosyalar/image046.png"
alt="metin, ekran görüntüsü, diyagram, paralel içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1048"><![endif]></span></p>

<p class=MsoNormal>Yani 50 Hz’lik bir frekansta ya da bir periyodu 20 ms süren
bir sinyalde -90 açısı için 1ms sürelik yüksek, 0 derece 1.5 ms süreli yüksek,
+90 açısı için ise 2 ms süreli yüksek sinyal gitmelidir. Yani sırayla %5, %7.5
ve %10’luk duty cycle oranı gerekir.</p>

<p class=MsoNormal>50 Hz’lik sinyali üretebilmek için 48MHz’lik ana
frekansımızı 9600-1 prescalar değerine bölersek 5kHz’lik sinyal alırız. Bu
5kHz’i de 100-1 ARR değerine bölerek 50 Hz elde ederiz. ARR değerimiz 100
olduğu için %5 için 5, %7.5 için yaklaşık 8, %10 için ise 10 değerinde bir
karşılaştırma bizim için yeterli olur.</p>

<p class=MsoNormal>SG90 servo motorumuzun + pinini +5V’a, GND’yi GND’ye ve
Sinyal pinini ise kart üzerindeki A2’ye yani mikroişlemcinin PA4’üne
bağlıyoruz.</p>

<p class=MsoNormal>Proje kodlarımızı bir önceki uygulamadaki gibi .ioc uzantılı
dosyadan aktif edip gerekli değerleri giriyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1047" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:308.25pt;height:219pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image047.png" o:title="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=411 height=292
src="STM32_Dersleri_content_dosyalar/image048.png"
alt="metin, ekran görüntüsü, yazılım, web sayfası içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1047"><![endif]></span></p>

<p class=MsoNormal>Main.c içerisinde PWM’i başlatıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1046" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:240.75pt;height:43.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image049.png" o:title="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=321 height=58
src="STM32_Dersleri_content_dosyalar/image049.png"
alt="metin, yazı tipi, ekran görüntüsü içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1046"><![endif]></span></p>

<p class=MsoNormal>While içerisinde 500ms aralıklarla konumu -90, 0, +90 olarak
değiştirebiliriz. Ayrıca for döngüsü ile de açıyı -90’dan +90’a sürekli gidip
gelmesini sağlayabiliriz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1045" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, işletim sistemi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:184.5pt;height:129pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image050.png" o:title="metin, ekran görüntüsü, yazılım, işletim sistemi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=246 height=172
src="STM32_Dersleri_content_dosyalar/image051.png"
alt="metin, ekran görüntüsü, yazılım, işletim sistemi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1045"><![endif]></span></p>

<h2 style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1'><![if !supportLists]><span
style='mso-fareast-font-family:"Aptos Display";mso-fareast-theme-font:major-latin;
mso-bidi-font-family:"Aptos Display";mso-bidi-theme-font:major-latin'><span
style='mso-list:Ignore'>4)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]>UART Haberleşme</h2>

<p class=MsoNormal>UART haberleşme protokolü mikroişlemcilerin başka
mikroişlemciler veya pc benzeri uart haberleşmeyi destekleyen cihazlar arasında
veri aktarımı yapmak için kullanılır. UART protokolünde 2 adet bağlantı vardır.
Her cihaz için TX ve RX bağlantısı. TX transmitter yani gönderici ve RX
receiver yani alıcı bağlantısıdır. Her bir cihazın TX bağlantısı diğer cihazın
RX bağlantısına ve RX bağlantısı diğer cihazın TX bağlantısına bağlanmalıdır.
Çünkü birinin gönderdiği veriyi diğeri almalıdır. Bu bağlantıya ek olarak iki
mikroişlemcinin veya cihazın GND’leri birbirine bağlı olmak zorundadır.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1044" type="#_x0000_t75" alt="Basics of UART Communication"
 style='width:329.25pt;height:161.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image052.png" o:title="Basics of UART Communication"/>
</v:shape><![endif]--><![if !vml]><img width=439 height=215
src="STM32_Dersleri_content_dosyalar/image053.jpg"
alt="Basics of UART Communication" v:shapes="_x0000_i1044"><![endif]></span></p>

<p class=MsoNormal>Uart haberleşmede veriler veri paketleri denilen bir paket
ile gönderilir. Bu veri paketi 11 bittir. 0. Bir başlatma, 1 ile 8. bit veriyi,
9. Bit parity yani eşleşme, 10. Bit ise durdurma ya da bitiş bitidir. 0. Bitin
düşen kenarı ile haberleşme başlatılır. Ardından gelen 8 bit ile veri
aktarılır. Eşleşme biti ile verinin gidip gitmediği kontrolü yapılır ve bitiş
biti ile sonlandırılır. </p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Resim_x0020_2" o:spid="_x0000_i1043" type="#_x0000_t75" alt="Nodemcu Nodemcu Uart With Esplorer Ide | Nodemcu"
 style='width:453.75pt;height:114.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image054.png" o:title="Nodemcu Nodemcu Uart With Esplorer Ide | Nodemcu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=153
src="STM32_Dersleri_content_dosyalar/image055.jpg"
alt="Nodemcu Nodemcu Uart With Esplorer Ide | Nodemcu" v:shapes="Resim_x0020_2"><![endif]></span></p>

<p class=MsoNormal>Bu veri paketlerinin gönderilme hızı ya da frekansını baud
rate denilen kavramla belirtiriz. Baud rate 1 saniye içerisinde ne kadar veri
taşıyacağını belirtir (bps). Haberleşecek olan iki cihazında aynı baud rate
hızına sahip olması gerekir çünkü bir taraf veriyi gönderirken diğer taraf o
veriyi çözümler. Örnek olarak 1 bps baud rate sahip iki cihaz haberleşirken 1
saniye boyunca yüksek (1) sinyal gönderdiğinde karşı taraf bunu “1” olarak
algılar. Fakat gönderen taraf 2 bps, alıcı taraf 1 bps hızında olsaydı alıcı bu
veriyi ”11” olarak algılayacak ve veri tamamen yanlış gönderilecekti.</p>

<p class=MsoNormal>Uart haberleşme protokollerinde baud rate’leri belirli
hızlarda yapılır. En çok kullanılan baud rate’ler; 4800, 9600, 19200, 28800,
38400, 57600, 76800, 115200’dür. </p>

<p class=MsoNormal><b>Uygulama 4.1) </b>Uart ile PC’ye veri gönderme;</p>

<p class=MsoNormal>Bu uygulamada STM32 kartımızdan PC’ye istediğimiz veriyi
göndereceğiz. Bu verileri PC’ye aktarabilmek için USB-TTL dönüştürücü ya da
FTDI dönüştürücüye ihtiyacımız var. Birde bu verileri görüntüleyebilmek için
ayrı bir programa ihtiyacımız var. Bu program olarak da Hercules’i
kullanacağız. Kısa bir araştırma ile indirebilirsiniz. </p>

<p class=MsoNormal>Kullandığım FTDI çevirici, üzerinde CH340 entegresi
bulunduran ve USB üzerinden haberleşmemizi sağlayan bir karttır. Kart
üzerindeki TX ve RX pinleri ile haberleşmeyi sağlayacağız. FTDI kartının
üzerindeki TX pini STM32F070 kartının RX pinine, FTDI çeviricinin RX pini
STM32F070 kartının TX pinine bağlanacaktır. Bu uygulamada program atabilmek
için USART2 birimini kullanıyor. Yani diğer USART birimleri boşta. Biz USART1
birimini kullanacağız. USART1 biriminin RX pini PA10, TX pini PA9’dur.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Resim_x0020_3" o:spid="_x0000_i1042" type="#_x0000_t75" alt="FT232RL FTDI USB to TTL Seri Haberleşme Dönüştürücü Modülü : Amazon.com.tr:  Bilgisayar"
 style='width:188.25pt;height:79.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image056.jpg" o:title="  Bilgisayar"/>
</v:shape><![endif]--><![if !vml]><img width=251 height=106
src="STM32_Dersleri_content_dosyalar/image057.jpg"
alt="FT232RL FTDI USB to TTL Seri Haberleşme Dönüştürücü Modülü : Amazon.com.tr:  Bilgisayar"
v:shapes="Resim_x0020_3"><![endif]></span></p>

<p class=MsoNormal>Yeni proje açıyoruz ve .ioc uzantılı dosyadan Connectivity
sekmesi altından USART1’e geliyoruz. Buradan Mode-&gt;Asynchronous’u seçiyoruz.
Baud Rate’i 9600 seçip otomatik olarak kodu oluşturuyoruz. </p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="_x0000_i1041" type="#_x0000_t75"
 alt="metin, ekran görüntüsü, yazılım, bilgisayar simgesi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453pt;height:213pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image058.png" o:title="metin, ekran görüntüsü, yazılım, bilgisayar simgesi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=604 height=284
src="STM32_Dersleri_content_dosyalar/image059.png"
alt="metin, ekran görüntüsü, yazılım, bilgisayar simgesi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1041"><![endif]></span><span style='mso-bidi-font-weight:
bold'><o:p></o:p></span></b></p>

<p class=MsoNormal>Otomatik kod oluşturma tamamlandı. Oluşan kod;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1040" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:357pt;height:261.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image060.png" o:title="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=476 height=349
src="STM32_Dersleri_content_dosyalar/image061.png"
alt="metin, ekran görüntüsü, yazılım, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1040"><![endif]></span></p>

<p class=MsoNormal>Şimdi main.c üzerine kodlarımızı yazabiliriz. </p>

<p class=MsoNormal>Göndereceğimiz veriyi bir değişkene atıyoruz.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1039" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:162pt;height:44.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image062.png" o:title="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=216 height=59
src="STM32_Dersleri_content_dosyalar/image062.png"
alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1039"><![endif]></span></p>

<p class=MsoNormal>Buradaki \n ASCI kodlamada bir sonraki satıra geçme anlamına
gelir. Değişkenimizi 8 bitlik bir int değişkene yazıyoruz. </p>

<p class=MsoNormal>Daha sonra bunu sürekli göndermesi için while döngüsü
içerisinde hal kütüphanesinin fonksiyonu ile veriyi iletiyoruz;<br>
<span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="_x0000_i1038"
 type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:284.25pt;height:112.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image063.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=379 height=150
src="STM32_Dersleri_content_dosyalar/image063.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1038"><![endif]></span></p>

<p class=MsoNormal>Buradaki data_tx oluşturduğumuz değişken, 6 gönderilecek bit
sayısı, 1000 ise timeout yani zaman aşımı süresidir. </p>

<p class=MsoNormal>Program bu kadar. Şimdi hercules programı üzerinden gelen
verilere bakıyoruz. Önce FTDI çeviricimizi bilgisayara bağlıyoruz. Sanrasında
aygıt yöneticisinden hangi COM porta bağlı olduğunu bulup hercules üzerinden
Serial sekmesi altında COM portumuzu seçiyoruz. Open dedikten sonra
gönderdiğimiz veri ekrana yansıyacaktır.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1037" type="#_x0000_t75" alt="metin, ekran görüntüsü, ekran, görüntüleme, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453.75pt;height:398.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image064.png" o:title="metin, ekran görüntüsü, ekran, görüntüleme, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=531
src="STM32_Dersleri_content_dosyalar/image064.png"
alt="metin, ekran görüntüsü, ekran, görüntüleme, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1037"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 4.2)</b> Uart ile PC’den veri almak;</p>

<p class=MsoNormal>Bir önceki uygulamada uart ile bilgisayara veri gönderdik.
Peki bilgisayardan ya da başka cihazdan nasıl veri alacağız? Bir önceki
projedeki bağlantılar ve başlangıç ayarları aynı olacak şekilde devam ediyoruz.
Bu sefer gönderilecek veri için değil alınacak veri için değişken
oluşturuyoruz. </p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1036" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:170.25pt;height:54.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image065.png" o:title="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=227 height=73
src="STM32_Dersleri_content_dosyalar/image065.png"
alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1036"><![endif]></span></p>

<p class=MsoNormal>While içerisinde ise verinin gelip gelmediğini kontrol eden
HAL fonksiyonunu çağırıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1035" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:280.5pt;height:102pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image066.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=374 height=136
src="STM32_Dersleri_content_dosyalar/image066.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1035"><![endif]></span></p>

<p class=MsoNormal>Gelen veriyi görüntülemek için bu sefer Debug modunu
kullanacağız. Yukarıdan debug seçeneğini işaretleyerek yazılım debug modunda
çalışacaktır. Yükleme tamamlandıktan sonra sağ tarafta yeni sekmeler
açılacaktır. Buradan Live Expression seçeneği altında istediğimiz değişkenleri
görüntüleyebiliriz. Şimdi Debug modunda iken yine yukarıdan resume seçeneği
tıklıyoruz. Ardından live expression sekmesinde add new expressin seçeneğine
tıklayarak data_rx değişkenimizi ekliyoruz. Burada hata verebilir. Eğer hata verirsen
uygulamadan çıkıp yeniden girin.</p>

<p class=MsoNormal>Bütün bunlardan sonra FTDI çeviricimiz bilgisayara bağlı
iken “Send” kısmına göndermek istediğimiz veriyi yazıyoruz. Ben burada
“mrtcnblgc” yazdım. Ardından send butonuna tıkladıktan sonra stm32CubeIde
üzerinde leive expression kısmında gönderdiğimiz veri gözükecektir. Ben
“mrtcnblgc” verisi almak istediğim için data_rx değişkenini 10 elemanlı bir
dizi olarak oluşturdum.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1034" type="#_x0000_t75" alt="ekran görüntüsü, yazılım, multimedya yazılımı, grafik yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:453.75pt;height:93.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image067.png" o:title="ekran görüntüsü, yazılım, multimedya yazılımı, grafik yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=605 height=125
src="STM32_Dersleri_content_dosyalar/image068.jpg"
alt="ekran görüntüsü, yazılım, multimedya yazılımı, grafik yazılımı içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1034"><![endif]></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 4.3)</b> Uart ile Kesme Kullanarak Veri Alma;</p>

<p class=MsoNormal>Yukarıdaki işlemlerde veri alma veya gönderme işlemleri
program akışı içerisinde yapıldı. Bu durum bir projede sıkıntılar
oluşturabilir. Çünkü veri alma veya gönderme işlemleri sırasında diğer işlemler
aksayabilir ve istenen çıktılar oluşmaz. Bunu denemek için 6 bitlik bir veri
değilde 1000-2000 bit sayısı içeren bir veri göndermeyi deneyebilirsiniz. <br>
Bu sıkıntının önüne geçmek için kesme birimini kullanabiliriz. Daha önce
gördüğümüz kesme işlemi GPIO için geçerliydi. Aynı şekilde kesme Timer, UART,
ADC gibi farklı birimlerde de bulunabilir. UART için kesme birimi veri
gönderilmek istendiğinde ya da almak istendiğinde gerçekleşir. Veri almak
istendiğinde veri geldiği anda kesme fonksiyonuna dallanır ve bu fonksiyonda
gelen veriler bir tampona kaydedilebilir. </p>

<p class=MsoNormal>.ioc dosyasından USART1’i aktif ettikten sonra USART1
sekmesinin altında NVIC Settings altından USART1 global interrupt seçeneğini
aktif ediyoruz. Otomatik kod oluşturduktan sonra ilgili kesmelerin aktif
edilmesi için gerekli fonksiyonu tanımlıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1033" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:352.5pt;height:139.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image069.png" o:title="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
  cropleft="1724f"/>
</v:shape><![endif]--><![if !vml]><img width=470 height=186
src="STM32_Dersleri_content_dosyalar/image070.png"
alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1033"><![endif]></span></p>

<p class=MsoNormal>Daha sonra gelecek veriler için data_rx, gönderilecek
veriler için data_rx adlı iki adet dizi değişkeni oluşturuyoruz.</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1032" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:126.75pt;height:55.5pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image071.png" o:title="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=169 height=74
src="STM32_Dersleri_content_dosyalar/image071.png"
alt="metin, yazı tipi, ekran görüntüsü, sayı, numara içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1032"><![endif]></span></p>

<p class=MsoNormal>Data_tx dizisinin her elemanını aynı olacak şekilde for
döngüsü ile dolduruyoruz. Daha sonra ilgili kesme fonksiyonlarını çağırıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1031" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:332.25pt;height:102.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image072.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=443 height=137
src="STM32_Dersleri_content_dosyalar/image072.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1031"><![endif]></span></p>

<p class=MsoNormal>Programın işeyişinin değişip değişmediğini görmek için while
içerisinde ledimizi 250ms aralıklarla yakıp söndürüyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1030" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:280.5pt;height:131.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image073.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
  cropleft="2739f"/>
</v:shape><![endif]--><![if !vml]><img width=374 height=175
src="STM32_Dersleri_content_dosyalar/image074.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1030"><![endif]></span></p>

<p class=MsoNormal>Verilerin gelip gelmediğini görmek için Hercules programına
bakabiliriz. Aynı zamanda veri gönderip debug seçeneği ile bakabiliriz. Burada
önemli olan veri alışverişinde ledin yanmasının aynı süreler içerisinde
olduğunu görmektir.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h1 style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1'><![if !supportLists]><span
style='font-size:16.0pt;line-height:115%;mso-fareast-font-family:"Aptos Display";
mso-fareast-theme-font:major-latin;mso-bidi-font-family:"Aptos Display";
mso-bidi-theme-font:major-latin'><span style='mso-list:Ignore'>5)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:16.0pt;line-height:115%'>ADC – Analog-Dijital Dönüştürücü<o:p></o:p></span></h1>

<p class=MsoNormal>Mikroişlemcinin dış dünyasındaki her veri analogdur. Yani
bir ışığın şiddeti, bir gerilimin değeri, ses vb. gibi birçok nicelik analog
bir veridir. Mikroişlemci bu analog verileri okuyup yorumlama yapabilmesi için
kendi anlayacağı dile yani ikilik tabanda bir sayıya çevirmesi gerekir. Analog
bir sinyalin herhangi bir iki noktası arasında sonsuz sayı vardır. Ama dijital
bir verinin durumu ya 0 yani düşük, ya da 1 yani yüksektir. </p>

<p class=MsoNormal>ADC’nin çalışması analog bir sinyalin belirli bir örnekleme
zamanı içerisinde, çözünürlük sayısının maksimum değeri ile 0 arasında belirtir.
</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1029" type="#_x0000_t75" alt="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:400.5pt;height:191.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image075.png" o:title="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=534 height=255
src="STM32_Dersleri_content_dosyalar/image076.png"
alt="metin, diyagram, çizgi, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1029"><![endif]></span></p>

<p class=MsoNormal>Yani örnek olarak 10 bit çözünürlüğe sahip, 0-3.3V arasında
referans gerilimi olan bir ADC’de 2^10= 1024 değeri maksimum gerilim olan
3.3v’a denk gelecektir. 0V ise 0 sayısına denk gelecektir. ADC’de her bir adım
değeri ise Vref/(2^n-1) ile bulunur. Bu örnekte 3.3V*1024-1=0.0322’dir. Yani
ADC’de okunan her bir adım artışı 0.0322V’a karşılık gelecektir.</p>

<p class=MsoNormal>STM32’de ADC Birimi;</p>

<p class=MsoNormal>STM32F070’de ADC birimi 6, 8, 10, 12 bit şeklinde çözünürlük
bulunur. 16 dış, 2 iç analog kanalı vardır. 2.4 ile 3.6V arasında referans
gerilimi verebiliriz. Ya da mikroişlemcinin kendi güç seviyesini vref olarak
kullanabiliriz. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b>Uygulama 5.1)</b> ADC ile Pot Okuma</p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Yeni proje açıyoruz
ve .ioc uzantılı dosyadan Analog sekmesi altında ADC seçeneğini açıyoruz.
Buradan IN0 yani kanal 1’i aktif ediyoruz. IN0 kanalı mikroişlemcinin üzerinde PA0,
kart üzerinde ise A0 bacağını temsil eder. Otomatik kod oluşturduktan sonra
main.c ana dosyamızda gelen verileri yazacağımız ve bu verileri uart ile
göndermek için iki adet değişken oluşturuyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1028" type="#_x0000_t75" alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:129pt;height:80.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image077.png" o:title="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=172 height=107
src="STM32_Dersleri_content_dosyalar/image077.png"
alt="metin, yazı tipi, ekran görüntüsü, tasarım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1028"><![endif]></span></p>

<p class=MsoNormal>Daha sonra while içerisinde ADC’yi başlatıp Polling metodu
ile ADC okuması yapıp değişkenimize aktarıyoruz. ADC’yi durdurup veriyi UART
ile görüntülemek için gönderiyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1027" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:338.25pt;height:174pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image078.png" o:title="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=451 height=232
src="STM32_Dersleri_content_dosyalar/image078.png"
alt="metin, ekran görüntüsü, yazı tipi, yazılım içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1027"><![endif]></span></p>

<p class=MsoNormal>Bütün işlem bu kadar. İster veriyi bir seri iletişim
ekranlarında ya da debug ile live expression altında görebiliriz. </p>

<p class=MsoNormal><b>Uygulama 5.2)</b> ADC ile Interrupt ile Okuma;</p>

<p class=MsoNormal>Bir önceki uygulamaya ek olarak bir ADC interrupt’ı ve bu
interruptı başlatmamız gerekiyor. .ioc’den adc’yi aktif edip NVIC settings
altında interruptı aktif ediyoruz. Daha sonra interruptı tanımlıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="_x0000_i1026" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:295.5pt;height:84pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image079.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=394 height=112
src="STM32_Dersleri_content_dosyalar/image079.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="_x0000_i1026"><![endif]></span></p>

<p class=MsoNormal>Daha sonra while içerisinde adc interruptını çalıştırıyoruz;</p>

<p class=MsoNormal><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Resim_x0020_1" o:spid="_x0000_i1025" type="#_x0000_t75" alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
 style='width:172.5pt;height:99.75pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="STM32_Dersleri_content_dosyalar/image080.png" o:title="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"/>
</v:shape><![endif]--><![if !vml]><img width=230 height=133
src="STM32_Dersleri_content_dosyalar/image080.png"
alt="metin, ekran görüntüsü, yazı tipi içeren bir resim&#10;&#10;Açıklama otomatik olarak oluşturuldu"
v:shapes="Resim_x0020_1"><![endif]></span></p>

<p class=MsoNormal>Burda da işlem bu kadar. Veriyi debug ile
görüntüleyebilirsiniz.</p>

</div>

</body>

</html>
